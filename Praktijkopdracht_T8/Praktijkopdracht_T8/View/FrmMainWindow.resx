<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +n8l+zZclAt7AAAAAABJRU5ErkJggg==
</value>
  </data>
</root>